################################################################################
# Build Configuration
################################################################################

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling", "hatch-vcs"]

################################################################################
# Project Configuration
################################################################################

[project]
name = "repoproviders"

dynamic = ["version"]

description = "Detect, resolve and fetch repositories of content"
authors = [
    { name = "Yuvi Panda", email = "yuvipanda@gmail.com" },
]
license = "BSD-3-Clause"
readme = {"file" = "README.md", "content-type" = "text/markdown"}
# Please consult https://pypi.org/classifiers/ for a full list.
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Typing :: Typed",
]
# TODO: add keywords
keywords = []
# TODO: add dependencies
dependencies = [
    "yarl",
    "aiohttp"
]

[project.urls]
Homepage = "https://github.com/yuvipanda/repoproviders"
"Source Code" = "https://github.com/yuvipanda/repoproviders"
"Bug Tracker" = "https://github.com/yuvipanda/repoproviders/issues"
Documentation = "https://repoproviders.readthedocs.io"
Download = "https://pypi.org/project/repoproviders/#files"

[project.scripts]
repoproviders = "repoproviders.__main__:cli_entrypoint"

[project.optional-dependencies]
dev = [
    "hatch",
    "pre-commit",
]

################################################################################
# Tool Configuration
################################################################################

[tool.hatch.build]
only-packages = true

[tool.hatch.build.targets.wheel]
packages = ["src/repoproviders"]
[tool.hatch.build.hooks.vcs]
version-file = "src/repoproviders/_version.py"

[tool.hatch.version]
source = "vcs"
[tool.pytest.ini_options]
testpaths = ["tests"]
markers = ["raises"]
asyncio_mode = "auto"

[tool.coverage.paths]
source = [
    "src/repoproviders",
    "*/site-packages/repoproviders",
]

[tool.coverage.run]
branch = true
parallel = true
omit = [
    "src/repoproviders/_version.py",
]

[tool.coverage.report]
exclude_lines = ["pragma: no cover"]
precision = 2

# The default isort output conflicts with black autoformatting.
# Tell isort to behave nicely with black
# See https://pycqa.github.io/isort/docs/configuration/black_compatibility.html
# for more information.
[tool.isort]
profile = "black"

[tool.pydoclint]
style = "google"  # TODO: Other styles are possible here, like 'numpy'
arg-type-hints-in-docstring = false
check-return-types = false
check-yield-types = false
exclude = "_version.py"
# TODO: Adjust mypy configuration.
#[tool.mypy]
#plugins = [
#    "pydantic.mypy",
#]

# Stop mypy from complaining about missing types from imports.
#[[tool.mypy.overrides]]
#module = [
#    "pandas",
#]
#ignore_missing_imports = true

#[tool.pydantic-mypy]
#init_forbid_extra = true
#init_typed = true
#warn_required_dynamic_aliases = true
################################################################################
# Hatch Environments
################################################################################
[tool.hatch.envs.style]
description = """Check the style of the codebase."""
dependencies = [
    "pydoclint",
]
detached = true

[tool.hatch.envs.style.scripts]
docstrings = "pydoclint"
check = ["docstrings"]

[tool.hatch.envs.audit]
description = """Check dependencies for security vulnerabilities."""
extra-dependencies = [
    "pip-audit",
]

[tool.hatch.envs.audit.scripts]
check = ["pip-audit"]
[tool.hatch.envs.types]
description = """Check the static types of the codebase."""
dependencies = [
    "mypy",
]

[tool.hatch.envs.types.scripts]
check = "mypy src/repoproviders"
[tool.hatch.envs.docs]
description = """Build or serve the documentation."""
python = "3.10"
dependencies = [
    "pydata_sphinx_theme ~=0.16",
    "myst-parser ~=4.0",
    "Sphinx ~=8.0",
    "sphinx-autobuild ==2024.10.3"
]

[tool.hatch.envs.docs.scripts]
build = ["sphinx-apidoc -o docs/api src/repoproviders", "sphinx-build {args:-W -b html docs docs/_build}"]
serve = ["sphinx-apidoc -o docs/api src/repoproviders", "sphinx-autobuild docs --watch src/repoproviders {args:-b html docs/_build/serve}"]

[tool.hatch.envs.install]
description = """Test the installation the package."""
dependencies = [
    "pip",
    "twine",
]
detached = true

[tool.hatch.envs.install.scripts]
check = [
    "pip check",
    "hatch build {args:--clean}",
    "twine check dist/*",
]
[tool.hatch.envs.test]
description = """Run the test suite."""
extra-dependencies = [
    "pytest",
    "pytest-cov",
    "pytest-raises",
    "pytest-randomly",
    "pytest-xdist",
    "pytest-asyncio"
]

[[tool.hatch.envs.test.matrix]]
python = ["3.10", "3.11", "3.12", "3.13"]

[tool.hatch.envs.test.scripts]
run = "pytest {args:--cov=repoproviders --cov-report=term-missing}"
